{"version":3,"sources":["components/Cart/CartItem.module.css","components/Shop/ProductItem.module.css","components/UI/Notification.module.css","components/Cart/CartButton.module.css","components/UI/Card.module.css","components/Cart/Cart.module.css","components/Layout/MainHeader.module.css","components/Shop/Products.module.css","components/UI/Card.js","store/cart-slice.js","components/Cart/CartItem.js","components/Cart/Cart.js","store/ui-slice.js","components/Cart/CartButton.js","components/Layout/MainHeader.js","components/Layout/Layout.js","components/Shop/ProductItem.js","components/Shop/Products.js","components/UI/Notification.js","App.js","store/cart-actions.js","store/index.js","index.js"],"names":["module","exports","Card","props","className","classes","card","children","cartSlice","createSlice","name","initialState","items","totalQuantity","changed","reducers","replaceCart","state","action","payload","addItem","newItem","existingItem","find","item","id","quantity","totalPrice","price","push","title","removeItem","filter","cartActions","actions","CartItem","dispatch","useDispatch","total","toFixed","itemprice","details","onClick","Cart","cartItems","useSelector","cart","map","uiSlice","cartIsVisible","notification","toggle","showNotification","status","message","uiActions","CartButton","totalCartAmount","button","badge","MainHeader","header","Layout","ProductItem","description","DUMMY_PRODUCTS","Products","products","product","Notification","specialClasses","error","success","cssClasses","isInitial","App","ui","useEffect","a","fetchData","fetch","response","ok","Error","json","data","cartData","sendRequest","method","body","JSON","stringify","sendCartData","store","configureStore","reducer","uiReducer","cartReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b005bc4f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CartItem_item__1zMOi\",\"details\":\"CartItem_details__2_Z3n\",\"quantity\":\"CartItem_quantity__DfEXm\",\"price\":\"CartItem_price__2Nl0j\",\"itemprice\":\"CartItem_itemprice__j9ZSt\",\"actions\":\"CartItem_actions__UwVPJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProductItem_item__WYS0J\",\"price\":\"ProductItem_price__1GiPR\",\"actions\":\"ProductItem_actions__14Yr-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__3D5S5\",\"error\":\"Notification_error__2ILHS\",\"success\":\"Notification_success__3Ww1I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"CartButton_button__3nU_b\",\"badge\":\"CartButton_badge__3njqM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart\":\"Cart_cart__3GqLz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainHeader_header__k5Wsz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"products\":\"Products_products__1PCvW\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return (\n    <section\n      className={`${classes.card} ${props.className ? props.className : ''}`}\n    >\n      {props.children}\n    </section>\n  );\n};\n\nexport default Card;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialCartState = {\n  items: [],\n  totalQuantity: 0,\n  changed: false,\n};\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: initialCartState,\n  reducers: {\n    replaceCart: (state, action) => {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n\n    addItem: (state, action) => {\n      const newItem = action.payload;\n      const existingItem = state.items.find((item) => item.id === newItem.id);\n      state.totalQuantity++;\n      state.changed = true;\n\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          title: newItem.title,\n        });\n      } else {\n        existingItem.quantity += 1;\n        existingItem.totalPrice += newItem.price;\n      }\n    },\n    removeItem: (state, action) => {\n      const id = action.payload;\n      const existingItem = state.items.find((item) => item.id === id);\n      state.totalQuantity--;\n      state.changed = true;\n\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter((item) => item.id !== id);\n      } else {\n        existingItem.quantity -= 1;\n        existingItem.totalPrice -= existingItem.price;\n      }\n    },\n  },\n});\n\nexport const cartActions = cartSlice.actions;\nexport default cartSlice.reducer;\n","import classes from \"./CartItem.module.css\";\nimport { useDispatch } from \"react-redux\";\nimport { cartActions } from \"../../store/cart-slice\";\n\nconst CartItem = (props) => {\n  const dispatch = useDispatch();\n  const { title, quantity, total, price, id } = props.item;\n\n  const deleteItemHandler = () => {\n    dispatch(cartActions.removeItem(id));\n  };\n\n  const addAnotherItemHandler = () => {\n    dispatch(cartActions.addItem({ id, title, price }));\n  };\n\n  return (\n    <li className={classes.item}>\n      <header>\n        <h3>{title}</h3>\n        <div className={classes.price}>\n          ${total.toFixed(2)}{\" \"}\n          <span className={classes.itemprice}>(${price.toFixed(2)}/item)</span>\n        </div>\n      </header>\n      <div className={classes.details}>\n        <div className={classes.quantity}>\n          x <span>{quantity}</span>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={deleteItemHandler}>-</button>\n          <button onClick={addAnotherItemHandler}>+</button>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default CartItem;\n","import Card from \"../UI/Card\";\nimport classes from \"./Cart.module.css\";\nimport CartItem from \"./CartItem\";\n\nimport { useSelector } from \"react-redux\";\n\nconst Cart = (props) => {\n  const cartItems = useSelector((state) => state.cart.items);\n\n  return (\n    <Card className={classes.cart}>\n      <h2>Your Shopping Cart</h2>\n      <ul>\n        {cartItems.map((item) => {\n          return (\n            <CartItem\n              key={item.id}\n              item={{\n                id: item.id,\n                title: item.title,\n                quantity: item.quantity,\n                total: item.totalPrice,\n                price: item.price,\n              }}\n            />\n          );\n        })}\n      </ul>\n    </Card>\n  );\n};\n\nexport default Cart;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst uiSlice = createSlice({\n  name: \"ui\",\n  initialState: { cartIsVisible: false, notification: null },\n  reducers: {\n    toggle: (state) => {\n      state.cartIsVisible = !state.cartIsVisible;\n    },\n    showNotification: (state, action) => {\n      state.notification = {\n        status: action.payload.status,\n        title: action.payload.title,\n        message: action.payload.message,\n      };\n    },\n  },\n});\n\nexport const uiActions = uiSlice.actions;\nexport default uiSlice.reducer;\n","import classes from \"./CartButton.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { uiActions } from \"../../store/ui-slice\";\n\nconst CartButton = (props) => {\n  const dispatch = useDispatch();\n  const totalCartAmount = useSelector((state) => state.cart.totalQuantity);\n\n  const toggleCartHandler = () => {\n    dispatch(uiActions.toggle());\n  };\n\n  return (\n    <button className={classes.button} onClick={toggleCartHandler}>\n      <span>My Cart</span>\n      <span className={classes.badge}>{totalCartAmount}</span>\n    </button>\n  );\n};\n\nexport default CartButton;\n","import CartButton from '../Cart/CartButton';\nimport classes from './MainHeader.module.css';\n\nconst MainHeader = (props) => {\n  return (\n    <header className={classes.header}>\n      <h1>ReduxCart</h1>\n      <nav>\n        <ul>\n          <li>\n            <CartButton />\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainHeader;\n","import { Fragment } from 'react';\nimport MainHeader from './MainHeader';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainHeader />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import Card from \"../UI/Card\";\nimport classes from \"./ProductItem.module.css\";\n\nimport { useDispatch } from \"react-redux\";\nimport { cartActions } from \"../../store/cart-slice\";\n\nconst ProductItem = ({ id, title, price, description }) => {\n  const dispatch = useDispatch();\n\n  const addItemToCartHandler = () => {\n    dispatch(cartActions.addItem({ id, price, title }));\n  };\n\n  return (\n    <li className={classes.item}>\n      <Card>\n        <header>\n          <h3>{title}</h3>\n          <div className={classes.price}>${price.toFixed(2)}</div>\n        </header>\n        <p>{description}</p>\n        <div className={classes.actions}>\n          <button onClick={addItemToCartHandler}>Add to Cart</button>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ProductItem;\n","import ProductItem from \"./ProductItem\";\nimport classes from \"./Products.module.css\";\n\nconst DUMMY_PRODUCTS = [\n  {\n    id: \"p1\",\n    price: 5,\n    title: \"Shampoo\",\n    description: \"The best shampoo in the world!\",\n  },\n  {\n    id: \"p2\",\n    price: 7,\n    title: \"Toothbrush\",\n    description: \"This is a bamboo toothbrush!\",\n  },\n];\n\nconst Products = (props) => {\n  return (\n    <section className={classes.products}>\n      <h2>Buy your favorite products</h2>\n      <ul>\n        {DUMMY_PRODUCTS.map((product) => {\n          return (\n            <ProductItem\n              key={product.id}\n              id={product.id}\n              title={product.title}\n              price={product.price}\n              description={product.description}\n            />\n          );\n        })}\n      </ul>\n    </section>\n  );\n};\n\nexport default Products;\n","import classes from \"./Notification.module.css\";\n\nconst Notification = (props) => {\n  let specialClasses = \"\";\n\n  if (props.status === \"error\") {\n    specialClasses = classes.error;\n  }\n  if (props.status === \"success\") {\n    specialClasses = classes.success;\n  }\n\n  const cssClasses = `${classes.notification} ${specialClasses}`;\n\n  return (\n    <section className={cssClasses}>\n      <h2>{props.title}</h2>\n      <p>{props.message}</p>\n    </section>\n  );\n};\n\nexport default Notification;\n","import Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport Notification from \"./components/UI/Notification\";\n\nimport { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { sendCartData, fetchCartData } from \"./store/cart-actions\";\n\nlet isInitial = true;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const cartIsVisible = useSelector((state) => state.ui.cartIsVisible);\n  const cart = useSelector((state) => state.cart);\n  const notification = useSelector((state) => state.ui.notification);\n\n  useEffect(() => {\n    dispatch(fetchCartData());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n\n    if (cart.changed) {\n      dispatch(sendCartData(cart));\n    }\n  }, [cart, dispatch]);\n\n  return (\n    <>\n      {notification && (\n        <Notification\n          status={notification.status}\n          title={notification.title}\n          message={notification.message}\n        />\n      )}\n      <Layout>\n        {cartIsVisible && <Cart />}\n        <Products />\n      </Layout>\n    </>\n  );\n}\n\nexport default App;\n","import { uiActions } from \"./ui-slice\";\nimport { cartActions } from \"./cart-slice\";\n\nexport const fetchCartData = () => {\n  return async (dispatch) => {\n    const fetchData = async () => {\n      const response = await fetch(\n        \"https://reactcourse---section-19-redux-default-rtdb.europe-west1.firebasedatabase.app/cart.json\"\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Could not fetch cart data!\");\n      }\n\n      const data = await response.json();\n      return data;\n    };\n\n    try {\n      const cartData = await fetchData();\n      dispatch(\n        cartActions.replaceCart({\n          items: cartData.items || [],\n          totalQuantity: cartData.totalQuantity,\n        })\n      );\n    } catch (error) {\n      dispatch(\n        uiActions.showNotification({\n          status: \"error\",\n          title: \"Error!\",\n          message: \"Fetching cart data failed!\",\n        })\n      );\n    }\n  };\n};\n\nexport const sendCartData = (cart) => {\n  return async (dispatch) => {\n    dispatch(\n      uiActions.showNotification({\n        status: \"pending\",\n        title: \"Sending...\",\n        message: \"Sending cart data!\",\n      })\n    );\n\n    const sendRequest = async () => {\n      const res = await fetch(\n        \"https://reactcourse---section-19-redux-default-rtdb.europe-west1.firebasedatabase.app/cart.json\",\n        {\n          method: \"PUT\",\n          body: JSON.stringify({\n            items: cart.items,\n            totalQuantity: cart.totalQuantity,\n          }),\n        }\n      );\n\n      if (!res.ok) {\n        throw new Error(\"Failed to send data!\");\n      }\n    };\n\n    try {\n      await sendRequest();\n\n      dispatch(\n        uiActions.showNotification({\n          status: \"success\",\n          title: \"Success!\",\n          message: \"The cart data was sent successfully!\",\n        })\n      );\n    } catch (error) {\n      dispatch(\n        uiActions.showNotification({\n          status: \"error\",\n          title: \"Error!\",\n          message: \"Failed to send cart data!\",\n        })\n      );\n    }\n  };\n};\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport uiReducer from \"./ui-slice\";\nimport cartReducer from \"./cart-slice\";\n\nconst store = configureStore({\n  reducer: { ui: uiReducer, cart: cartReducer },\n});\n\nexport default store;\n","import ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./App\";\nimport store from \"./store\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}